
on:
  push:
    tags:
      - 'refetch-v*'
      - 'refetch-v*'
      - 'refetch-again-v*'
      - 'refetch-repair-v*'
      - 'refetch-multiple-v*'
      - 'refetch-late-v*'
      - 'refetch-result-v*'
      - 'import-v*'
      - 'ingest-v*'
      - 'ingest-fast-v*'
      - 'notify-v*'
      - 'proxy-v*'
      - 'rating-history-v*'
      - 'metric-v*'
      - 'api-v*'
      - 'function-v*'
      - 'rank-v*'
      - 'replay-v*'
      - 'graphql-v*'

name: Server

env:
  NODE_VERSION: 12.13.1

jobs:

  build-and-publish-server:
    name: Build and Publish Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Env
        uses: ./.github/actions/setup
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup Secrets
        uses: secrethub/actions/env-export@v0.2.1
        env:
          SECRETHUB_CREDENTIAL: ${{ secrets.SECRETHUB_AOE2COMPANION_CREDENTIAL }}
          DOCKERHUB_USERNAME: secrethub://denniske/aoe2companion/dockerhub_username
          DOCKERHUB_PASSWORD: secrethub://denniske/aoe2companion/dockerhub_password
          KUBERNETES_SERVER: secrethub://denniske/aoe2companion/kubernetes_server
          KUBERNETES_TOKEN: secrethub://denniske/aoe2companion/kubernetes_token
          KUBERNETES_CLUSTER_CERTIFICATE: secrethub://denniske/aoe2companion/kubernetes_cluster_certificate
      - run: echo "SERVICE_NAME=$(node deploy/script/service-name-from-tag.js $TRAVIS_BRANCH)" >> $GITHUB_ENV
      - run: echo $SERVICE_NAME
      - run: sudo yarn global add nx
      - run: yarn
      - run: yarn run generate:prisma
      - run: nx build graph
      - run: docker build -f graph/deploy/Dockerfile -t denniske/aoe2companion-$SERVICE_NAME:$COMMIT_SHA1 .
      - run: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run: docker push denniske/aoe2companion-$SERVICE_NAME:$COMMIT_SHA1
      - run: chmod +x ./graph/deploy/deploy.sh && ./graph/deploy/deploy.sh


#     - echo $ID_CI_RSA_BASE64 > id_ci_rsa.base64
#     - base64 --decode id_ci_rsa.base64 > ~/.ssh/id_rsa
#     - echo $KNOWN_HOSTS_BASE64 > known_hosts.base64
#     - base64 --decode known_hosts.base64 > ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#     - chmod 600 ~/.ssh/id_rsa
#
#     - cd deploy
#     - bash ./deploy.sh
#     - scp docker-compose.yml root@116.203.245.222:/root
#     - ssh root@116.203.245.222 docker-compose up -d
